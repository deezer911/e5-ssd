"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("graphql");
const graphql_helpers_1 = require("../utils/graphql-helpers");
exports.default = (ast) => {
    let queries = [];
    let mutations = [];
    // Loop through the AST and find Query and Mutation types.
    ast = graphql_1.visit(ast, {
        ObjectTypeDefinition: {
            enter(node) {
                if (node.name.kind === 'Name' && node.name.value === 'Query') {
                    queries = queries.concat(node.fields);
                }
                if (node.name.kind === 'Name' && node.name.value === 'Mutation') {
                    mutations = mutations.concat(node.fields);
                }
            },
        },
    });
    // If there are no queries, add a single empty Query type
    if (queries.length === 0) {
        const mutated = graphql_helpers_1.cloneDeep(ast);
        mutated.definitions.push({
            kind: 'ObjectTypeDefinition',
            description: undefined,
            name: { kind: 'Name', value: 'Query' },
            interfaces: [],
            directives: [],
            fields: [],
        });
        ast = mutated;
    }
    // If there are mutations, add a single empty Mutation type
    if (mutations.length === 0) {
        const mutated = graphql_helpers_1.cloneDeep(ast);
        mutated.definitions.push({
            kind: 'ObjectTypeDefinition',
            description: undefined,
            name: { kind: 'Name', value: 'Mutation' },
            interfaces: [],
            directives: [],
            fields: [],
        });
        ast = mutated;
    }
    return ast;
};
//# sourceMappingURL=ensure-query-and-mutation-types.js.map