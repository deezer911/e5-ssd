"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("graphql");
const graphql_helpers_1 = require("./graphql-helpers");
exports.default = (ast) => {
    // Loop through the AST and nuke `__query` and `__mutation` stubs
    ast = graphql_1.visit(ast, {
        ObjectTypeDefinition: {
            enter(node) {
                if (node.name.kind === 'Name' && node.name.value === 'Query') {
                    const mutated = graphql_helpers_1.cloneDeep(node);
                    mutated.fields = mutated.fields.filter((field) => {
                        return field.name.value !== '__query';
                    });
                    return mutated;
                }
                if (node.name.kind === 'Name' && node.name.value === 'Mutation') {
                    const mutated = graphql_helpers_1.cloneDeep(node);
                    mutated.fields = mutated.fields.filter((field) => {
                        return field.name.value !== '__mutated';
                    });
                    return mutated;
                }
            },
        },
    });
    // Strip empty Queries and Mutations definitions
    ast = graphql_1.visit(ast, {
        ObjectTypeDefinition: {
            enter(node) {
                var _a, _b;
                if (node.name.kind === 'Name' && node.name.value === 'Query') {
                    if (((_a = node.fields) === null || _a === void 0 ? void 0 : _a.length) === 0)
                        return null;
                }
                if (node.name.kind === 'Name' && node.name.value === 'Mutation') {
                    if (((_b = node.fields) === null || _b === void 0 ? void 0 : _b.length) === 0)
                        return null;
                }
            },
        },
    });
    return ast;
};
//# sourceMappingURL=strip-empty-queries-and-mutations.js.map