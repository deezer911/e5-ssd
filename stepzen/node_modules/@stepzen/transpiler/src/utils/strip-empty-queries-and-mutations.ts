import {DocumentNode, visit} from 'graphql'

import {cloneDeep} from './graphql-helpers'

export default (ast: DocumentNode): DocumentNode => {
  // Loop through the AST and nuke `__query` and `__mutation` stubs
  ast = visit(ast, {
    ObjectTypeDefinition: {
      enter(node) {
        if (node.name.kind === 'Name' && node.name.value === 'Query') {
          const mutated: any = cloneDeep(node)
          mutated.fields = mutated.fields.filter((field: any) => {
            return field.name.value !== '__query'
          })
          return mutated
        }
        if (node.name.kind === 'Name' && node.name.value === 'Mutation') {
          const mutated: any = cloneDeep(node)
          mutated.fields = mutated.fields.filter((field: any) => {
            return field.name.value !== '__mutated'
          })
          return mutated
        }
      },
    },
  })

  // Strip empty Queries and Mutations definitions
  ast = visit(ast, {
    ObjectTypeDefinition: {
      enter(node) {
        if (node.name.kind === 'Name' && node.name.value === 'Query') {
          if (node.fields?.length === 0) return null
        }
        if (node.name.kind === 'Name' && node.name.value === 'Mutation') {
          if (node.fields?.length === 0) return null
        }
      },
    },
  })

  return ast
}
