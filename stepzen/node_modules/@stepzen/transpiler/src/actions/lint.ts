import fetch from 'node-fetch'
import * as fs from 'fs-extra'
import * as os from 'os'
import * as path from 'path'
import * as shell from 'shelljs'

import stitch from '../actions/stitch'

export default async (
  source: string,
  options: {
    extensions: string
  } = {
    extensions: '',
  },
) => {
  if (!fs.existsSync(source)) {
    throw new Error(`Cannot find source directory ${source}`)
  }

  let extensions = options.extensions

  if (!extensions) {
    const response = await fetch('https://www.steprz.net/directives.graphql')
    extensions = await response.text()
  }

  const stitched = stitch(source)
  const index = path.join(stitched, 'index.graphql')
  const graphql = fs.readFileSync(index, 'utf8')

  const tmp = path.join(os.tmpdir(), `stepzen-lint-${Date.now()}`)
  fs.ensureDirSync(tmp)
  const lintFile = path.join(tmp, 'index.graphql')
  fs.writeFileSync(lintFile, `${extensions}${os.EOL}${os.EOL}${graphql}`)

  shell.exec(
    `npx graphql-schema-linter ${lintFile}`,
    {silent: true},
    (code, stdout, stderr) => {
      console.log(stdout)
      fs.removeSync(tmp)
    },
  )
}
