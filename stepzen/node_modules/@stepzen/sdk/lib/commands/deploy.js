"use strict";
// Copyright (c) 2020,2021,2022, StepZen, Inc.
Object.defineProperty(exports, "__esModule", { value: true });
const debug = require("debug");
const node_fetch_1 = require("node-fetch");
const constants_1 = require("../shared/constants");
const request_1 = require("../shared/request");
exports.default = async (details, account, sdkConfig) => {
    const headers = request_1.getRequestHeaders(account, sdkConfig);
    const payload = {
        schema: `/workspaces/schemas/${details.schema}`,
    };
    if (details.configurationsets) {
        payload.configurationsets = details.configurationsets.map(config => `/workspaces/configurationsets/${config}`);
    }
    debug('stepzen:headers')(headers);
    debug('stepzen:payload')(payload);
    const response = await node_fetch_1.default(`${account.server}${constants_1.ADMIN_DEPLOY_URL}/${details.destination}`, {
        body: JSON.stringify(payload),
        headers: headers,
        method: 'POST',
    });
    debug('stepzen:response')(response);
    if (response.status >= 400 && response.status < 500) {
        throw new Error('Could not complete the request. Please check your authentication details are correct.');
    }
    if (response.status >= 500) {
        return {
            errors: [response.statusText],
            success: false,
        };
    }
    const text = await response.text();
    let json;
    try {
        json = JSON.parse(text);
    }
    catch (_a) {
        return {
            errors: [`An unexpected error occurred.\n\n${text}`],
            success: false,
        };
    }
    return json;
};
//# sourceMappingURL=deploy.js.map